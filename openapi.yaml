components:
    schemas:
        '*bool':
            $ref: '#/components/schemas/*bool'
        '*string':
            $ref: '#/components/schemas/*string'
        '[]*github.com/zachacious/justauth/internal/services/oauth.ProjectOAuthProviderResponse':
            $ref: '#/components/schemas/[]*github.com/zachacious/justauth/internal/services/oauth.ProjectOAuthProviderResponse'
        '[]*github.com/zachacious/justauth/internal/services/session.SessionResponse':
            $ref: '#/components/schemas/[]*github.com/zachacious/justauth/internal/services/session.SessionResponse'
        '[]github.com/go-webauthn/webauthn/protocol.AttestationFormat':
            $ref: '#/components/schemas/[]github.com/go-webauthn/webauthn/protocol.AttestationFormat'
        '[]github.com/go-webauthn/webauthn/protocol.AuthenticatorTransport':
            $ref: '#/components/schemas/[]github.com/go-webauthn/webauthn/protocol.AuthenticatorTransport'
        '[]github.com/go-webauthn/webauthn/protocol.CredentialDescriptor':
            $ref: '#/components/schemas/[]github.com/go-webauthn/webauthn/protocol.CredentialDescriptor'
        '[]github.com/go-webauthn/webauthn/protocol.CredentialParameter':
            $ref: '#/components/schemas/[]github.com/go-webauthn/webauthn/protocol.CredentialParameter'
        '[]github.com/go-webauthn/webauthn/protocol.PublicKeyCredentialHints':
            $ref: '#/components/schemas/[]github.com/go-webauthn/webauthn/protocol.PublicKeyCredentialHints'
        '[]github.com/zachacious/justauth/internal/database/sqlcgen.Project':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/database/sqlcgen.Project'
        '[]github.com/zachacious/justauth/internal/database/sqlcgen.ProjectIntegration':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/database/sqlcgen.ProjectIntegration'
        '[]github.com/zachacious/justauth/internal/services/apikey.ListAPIKeyResponse':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/apikey.ListAPIKeyResponse'
        '[]github.com/zachacious/justauth/internal/services/backup.BackupFile':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/backup.BackupFile'
        '[]github.com/zachacious/justauth/internal/services/platform.PlatformResponse':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/platform.PlatformResponse'
        '[]github.com/zachacious/justauth/internal/services/project.InvitationResponse':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/project.InvitationResponse'
        '[]github.com/zachacious/justauth/internal/services/project.MemberResponse':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/project.MemberResponse'
        '[]github.com/zachacious/justauth/internal/services/rbac.RoleWithPermissions':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/rbac.RoleWithPermissions'
        '[]github.com/zachacious/justauth/internal/services/sso.SSODomainResponse':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/sso.SSODomainResponse'
        '[]github.com/zachacious/justauth/internal/services/users.UserMFAResponse':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/users.UserMFAResponse'
        '[]github.com/zachacious/justauth/internal/services/users.UserResponse':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/users.UserResponse'
        '[]github.com/zachacious/justauth/internal/services/users.UserSessionResponse':
            $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/users.UserSessionResponse'
        '[]string':
            $ref: '#/components/schemas/[]string'
        AcceptInvitationRequest:
            $ref: '#/components/schemas/AcceptInvitationRequest'
        AccountCreationRequest:
            $ref: '#/components/schemas/AccountCreationRequest'
        AccountUserResponse:
            $ref: '#/components/schemas/AccountUserResponse'
        AddMemberRequest:
            $ref: '#/components/schemas/AddMemberRequest'
        AddSSODomainRequest:
            $ref: '#/components/schemas/AddSSODomainRequest'
        AdminUpdatePasswordRequest:
            $ref: '#/components/schemas/AdminUpdatePasswordRequest'
        AuthenticationExtensions:
            $ref: '#/components/schemas/AuthenticationExtensions'
        AuthenticatorSelection:
            $ref: '#/components/schemas/AuthenticatorSelection'
        BackupConfigResponse:
            $ref: '#/components/schemas/BackupConfigResponse'
        BackupFile:
            $ref: '#/components/schemas/BackupFile'
        CompleteMFALoginRequest:
            $ref: '#/components/schemas/CompleteMFALoginRequest'
        Config:
            $ref: '#/components/schemas/Config'
        ConfirmPasswordResetRequest:
            $ref: '#/components/schemas/ConfirmPasswordResetRequest'
        CreateAPIKeyRequest:
            $ref: '#/components/schemas/CreateAPIKeyRequest'
        CreateAPIKeyResponse:
            $ref: '#/components/schemas/CreateAPIKeyResponse'
        CreateEmailSessionRequest:
            $ref: '#/components/schemas/CreateEmailSessionRequest'
        CreateIntegrationParams:
            $ref: '#/components/schemas/CreateIntegrationParams'
        CreateJobResponse:
            $ref: '#/components/schemas/CreateJobResponse'
        CreateProjectParams:
            $ref: '#/components/schemas/CreateProjectParams'
        CreateRoleRequest:
            $ref: '#/components/schemas/CreateRoleRequest'
        CreateUserRequest:
            $ref: '#/components/schemas/CreateUserRequest'
        CredentialCreation:
            $ref: '#/components/schemas/CredentialCreation'
        CredentialDescriptor:
            $ref: '#/components/schemas/CredentialDescriptor'
        CredentialEntity:
            $ref: '#/components/schemas/CredentialEntity'
        CredentialParameter:
            $ref: '#/components/schemas/CredentialParameter'
        DashboardMetricsResponse:
            $ref: '#/components/schemas/DashboardMetricsResponse'
        Endpoint:
            $ref: '#/components/schemas/Endpoint'
        GeneratePassportRequest:
            $ref: '#/components/schemas/GeneratePassportRequest'
        GeneratePassportResponse:
            $ref: '#/components/schemas/GeneratePassportResponse'
        GenericSuccessResponse:
            $ref: '#/components/schemas/GenericSuccessResponse'
        IntegrationResponse:
            $ref: '#/components/schemas/IntegrationResponse'
        InvitationResponse:
            $ref: '#/components/schemas/InvitationResponse'
        Job:
            $ref: '#/components/schemas/Job'
        ListAPIKeyResponse:
            $ref: '#/components/schemas/ListAPIKeyResponse'
        LoginResponse:
            $ref: '#/components/schemas/LoginResponse'
        MFAChallenge:
            $ref: '#/components/schemas/MFAChallenge'
        MFAStatusResponse:
            $ref: '#/components/schemas/MFAStatusResponse'
        MemberResponse:
            $ref: '#/components/schemas/MemberResponse'
        NullInt32:
            $ref: '#/components/schemas/NullInt32'
        NullRawMessage:
            $ref: '#/components/schemas/NullRawMessage'
        NullString:
            $ref: '#/components/schemas/NullString'
        NullTime:
            $ref: '#/components/schemas/NullTime'
        OAuthLoginRequest:
            $ref: '#/components/schemas/OAuthLoginRequest'
        PlatformResponse:
            $ref: '#/components/schemas/PlatformResponse'
        Project:
            $ref: '#/components/schemas/Project'
        ProjectIntegration:
            $ref: '#/components/schemas/ProjectIntegration'
        ProjectOAuthProviderResponse:
            $ref: '#/components/schemas/ProjectOAuthProviderResponse'
        ProjectResponse:
            $ref: '#/components/schemas/ProjectResponse'
        PublicKeyCredentialCreationOptions:
            $ref: '#/components/schemas/PublicKeyCredentialCreationOptions'
        RawMessage:
            $ref: '#/components/schemas/RawMessage'
        RegenerateRecoveryCodesResponse:
            $ref: '#/components/schemas/RegenerateRecoveryCodesResponse'
        RelyingPartyEntity:
            $ref: '#/components/schemas/RelyingPartyEntity'
        RequestMagicLinkRequest:
            $ref: '#/components/schemas/RequestMagicLinkRequest'
        RequestPasswordResetRequest:
            $ref: '#/components/schemas/RequestPasswordResetRequest'
        Role:
            $ref: '#/components/schemas/Role'
        RoleWithPermissions:
            $ref: '#/components/schemas/RoleWithPermissions'
        S3Config:
            $ref: '#/components/schemas/S3Config'
        SSODomainResponse:
            $ref: '#/components/schemas/SSODomainResponse'
        SSOExchangeRequest:
            $ref: '#/components/schemas/SSOExchangeRequest'
        SSOExchangeResponse:
            $ref: '#/components/schemas/SSOExchangeResponse'
        SSOSettings:
            $ref: '#/components/schemas/SSOSettings'
        SSOSettingsResponse:
            $ref: '#/components/schemas/SSOSettingsResponse'
        SSOUser:
            $ref: '#/components/schemas/SSOUser'
        SessionResponse:
            $ref: '#/components/schemas/SessionResponse'
        SessionsResponse:
            $ref: '#/components/schemas/SessionsResponse'
        SetupPushRequest:
            $ref: '#/components/schemas/SetupPushRequest'
        SetupPushResponse:
            $ref: '#/components/schemas/SetupPushResponse'
        SetupSMSRequest:
            $ref: '#/components/schemas/SetupSMSRequest'
        SetupTOTPResponse:
            $ref: '#/components/schemas/SetupTOTPResponse'
        Time:
            $ref: '#/components/schemas/Time'
        URLEncodedBase64:
            $ref: '#/components/schemas/URLEncodedBase64'
        UUID:
            $ref: '#/components/schemas/UUID'
        UpdateBackupConfigRequest:
            $ref: '#/components/schemas/UpdateBackupConfigRequest'
        UpdateEmailRequest:
            $ref: '#/components/schemas/UpdateEmailRequest'
        UpdateIntegrationRequest:
            $ref: '#/components/schemas/UpdateIntegrationRequest'
        UpdateMemberRoleRequest:
            $ref: '#/components/schemas/UpdateMemberRoleRequest'
        UpdatePasswordRequest:
            $ref: '#/components/schemas/UpdatePasswordRequest'
        UpdatePhoneRequest:
            $ref: '#/components/schemas/UpdatePhoneRequest'
        UpdatePlatformRequest:
            $ref: '#/components/schemas/UpdatePlatformRequest'
        UpdateProjectIDRequest:
            $ref: '#/components/schemas/UpdateProjectIDRequest'
        UpdateProjectNameRequest:
            $ref: '#/components/schemas/UpdateProjectNameRequest'
        UpdateRateLimitRequest:
            $ref: '#/components/schemas/UpdateRateLimitRequest'
        UpdateRolePermissionsRequest:
            $ref: '#/components/schemas/UpdateRolePermissionsRequest'
        UpdateRoleRequest:
            $ref: '#/components/schemas/UpdateRoleRequest'
        UpdateStatusRequest:
            $ref: '#/components/schemas/UpdateStatusRequest'
        UpdateUserEmailRequest:
            $ref: '#/components/schemas/UpdateUserEmailRequest'
        UpdateUserPhoneRequest:
            $ref: '#/components/schemas/UpdateUserPhoneRequest'
        UpdateUserRequest:
            $ref: '#/components/schemas/UpdateUserRequest'
        UpsertProjectOAuthProviderRequest:
            $ref: '#/components/schemas/UpsertProjectOAuthProviderRequest'
        UserEntity:
            $ref: '#/components/schemas/UserEntity'
        UserMFAResponse:
            $ref: '#/components/schemas/UserMFAResponse'
        UserResponse:
            $ref: '#/components/schemas/UserResponse'
        UserSessionResponse:
            $ref: '#/components/schemas/UserSessionResponse'
        VerifyEmailFactorRequest:
            $ref: '#/components/schemas/VerifyEmailFactorRequest'
        VerifyEmailRequest:
            $ref: '#/components/schemas/VerifyEmailRequest'
        VerifyPushLoginRequest:
            $ref: '#/components/schemas/VerifyPushLoginRequest'
        VerifyPushRequest:
            $ref: '#/components/schemas/VerifyPushRequest'
        VerifySMSRequest:
            $ref: '#/components/schemas/VerifySMSRequest'
        VerifyTOTPRequest:
            $ref: '#/components/schemas/VerifyTOTPRequest'
        VerifyTOTPResponse:
            $ref: '#/components/schemas/VerifyTOTPResponse'
        any:
            $ref: '#/components/schemas/any'
        interface{}:
            $ref: '#/components/schemas/interface{}'
        map[string]bool:
            $ref: '#/components/schemas/map[string]bool'
        map[string]interface{}:
            $ref: '#/components/schemas/map[string]interface{}'
        map[string]string:
            $ref: '#/components/schemas/map[string]string'
        struct{CompletionToken string "json:\"completion_token\" validate:\"required\""}:
            $ref: '#/components/schemas/struct{CompletionToken string "json:\"completion_token\" validate:\"required\""}'
        struct{Projects []github.com/zachacious/justauth/internal/database/sqlcgen.Project "json:\"projects\""}:
            $ref: '#/components/schemas/struct{Projects []github.com/zachacious/justauth/internal/database/sqlcgen.Project "json:\"projects\""}'
    securitySchemes:
        BearerAuth:
            bearerFormat: JWT
            scheme: bearer
            type: http
info:
    description: Next generation authentication API
    title: JustAuth API
    version: 1.0.0
openapi: 3.1.0
paths:
    /v1/account:
        get:
            description: Get retrieves user account information
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccountUserResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve account
                default:
                    description: ""
            summary: Get retrieves user account information
        post:
            description: Create handles user account creation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AccountCreationRequest'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                    description: Created
                "409":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Conflict
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: An unexpected error occurred during registration
                default:
                    description: ""
            summary: Create handles user account creation
    /v1/account/email:
        patch:
            description: UpdateEmail updates user's email address
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEmailRequest'
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update email
                default:
                    description: ""
            summary: UpdateEmail updates user's email address
    /v1/account/mfa/email/setup:
        post:
            description: HandleSetupEmailFactor initiates email MFA setup
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericSuccessResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleSetupEmailFactor initiates email MFA setup
    /v1/account/mfa/email/verify:
        post:
            description: HandleVerifyEmailFactor verifies email MFA setup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyEmailFactorRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericSuccessResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                default:
                    description: ""
            summary: HandleVerifyEmailFactor verifies email MFA setup
    /v1/account/mfa/push/login-verify:
        post:
            description: HandleVerifyPushLogin verifies push notification login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyPushLoginRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericSuccessResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                default:
                    description: ""
            summary: HandleVerifyPushLogin verifies push notification login
    /v1/account/mfa/push/setup:
        post:
            description: HandleSetupPush initiates push notification setup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetupPushRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetupPushResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleSetupPush initiates push notification setup
    /v1/account/mfa/push/verify:
        post:
            description: HandleVerifyPush verifies push notification setup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyPushRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericSuccessResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                default:
                    description: ""
            summary: HandleVerifyPush verifies push notification setup
    /v1/account/mfa/sms/setup:
        post:
            description: SetupSMS initiates SMS MFA setup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetupSMSRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericSuccessResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: SetupSMS initiates SMS MFA setup
    /v1/account/mfa/sms/verify:
        post:
            description: VerifySMS verifies and activates SMS MFA
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifySMSRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenericSuccessResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: VerifySMS verifies and activates SMS MFA
    /v1/account/mfa/totp/setup:
        post:
            description: SetupTOTP initiates TOTP setup
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetupTOTPResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: SetupTOTP initiates TOTP setup
    /v1/account/mfa/totp/verify:
        post:
            description: VerifyTOTP verifies and activates TOTP
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyTOTPRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyTOTPResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: VerifyTOTP verifies and activates TOTP
    /v1/account/mfa/webauthn/register/begin:
        post:
            description: HandleBeginRegistration starts the WebAuthn registration ceremony
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CredentialCreation'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: User not found
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not begin WebAuthn registration
                default:
                    description: ""
            summary: HandleBeginRegistration starts the WebAuthn registration ceremony
    /v1/account/mfa/webauthn/register/finish:
        post:
            description: HandleFinishRegistration completes the WebAuthn registration ceremony
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/map[string]bool'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to finish WebAuthn registration
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: User not found
                default:
                    description: ""
            summary: HandleFinishRegistration completes the WebAuthn registration ceremony
    /v1/account/my-logs:
        get:
            description: HandleListMyAuditLogs lists current user's audit logs
            responses:
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve your activity logs.
                default:
                    description: ""
            summary: HandleListMyAuditLogs lists current user's audit logs
    /v1/account/password:
        patch:
            description: UpdatePassword updates user's password
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePasswordRequest'
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update password
                default:
                    description: ""
            summary: UpdatePassword updates user's password
    /v1/account/phone:
        patch:
            description: UpdatePhone updates user's phone number
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePhoneRequest'
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update phone
                default:
                    description: ""
            summary: UpdatePhone updates user's phone number
    /v1/account/recovery:
        post:
            description: SendPasswordRecovery sends password recovery email
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestPasswordResetRequest'
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to send password recovery email
                default:
                    description: ""
            summary: SendPasswordRecovery sends password recovery email
        put:
            description: RecoverPassword completes password recovery
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConfirmPasswordResetRequest'
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to recover password
                default:
                    description: ""
            summary: RecoverPassword completes password recovery
    /v1/account/sessions:
        delete:
            description: DeleteAllSessions deletes all user sessions
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to delete all sessions
                default:
                    description: ""
            summary: DeleteAllSessions deletes all user sessions
        get:
            description: ListSessions lists all user sessions
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SessionsResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to list sessions
                default:
                    description: ""
            summary: ListSessions lists all user sessions
    /v1/account/sessions/{id}:
        delete:
            description: DeleteSession deletes current session
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to delete session
                default:
                    description: ""
            summary: DeleteSession deletes current session
        get:
            description: GetSessionByID retrieves a specific session by ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid session ID format
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: You do not have permission to access this session
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve session
                default:
                    description: ""
            summary: GetSessionByID retrieves a specific session by ID
        patch:
            description: UpdateSession extends session expiration
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to extend session expiration
                default:
                    description: ""
            summary: UpdateSession extends session expiration
    /v1/account/sessions/anonymous:
        post:
            description: CreateAnonymous handles anonymous user creation
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                    description: Created
                "409":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Conflict
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: An unexpected error occurred during registration
                default:
                    description: ""
            summary: CreateAnonymous handles anonymous user creation
    /v1/account/sessions/email:
        post:
            description: CreateEmailSesssion creates a session using email/password
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEmailSessionRequest'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                    description: Created
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid email or password.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to create session.
                default:
                    description: ""
            summary: CreateEmailSesssion creates a session using email/password
    /v1/account/sessions/magic-link:
        post:
            description: RequestMagicLink requests a magic link for login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestMagicLinkRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/map[string]bool'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: RequestMagicLink requests a magic link for login
    /v1/account/sessions/magic-link/verify:
        get:
            description: VerifyMagicLink verifies magic link and creates session
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                default:
                    description: ""
            summary: VerifyMagicLink verifies magic link and creates session
    /v1/account/sessions/mfa:
        post:
            description: CompleteMFALogin completes MFA authentication
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CompleteMFALoginRequest'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                    description: Created
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: CompleteMFALogin completes MFA authentication
    /v1/account/sessions/mfa-status/{challengeID}:
        get:
            description: HandleGetMFAStatus retrieves MFA status
            parameters:
                - in: path
                  name: challengeID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MFAStatusResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleGetMFAStatus retrieves MFA status
    /v1/account/sessions/oauth/{provider}:
        post:
            description: HandleOAuthLogin initiates OAuth authentication
            parameters:
                - in: path
                  name: provider
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OAuthLoginRequest'
            responses:
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleOAuthLogin initiates OAuth authentication
    /v1/account/sessions/oauth/{provider}/callback:
        get:
            description: HandleOAuthCallback handles OAuth provider callback
            parameters:
                - in: path
                  name: provider
                  required: true
                  schema:
                    type: string
            responses:
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleOAuthCallback handles OAuth provider callback
    /v1/account/sessions/webauthn:
        post:
            description: HandleCreateWebAuthnSession creates session from WebAuthn
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/struct{CompletionToken string "json:\"completion_token\" validate:\"required\""}'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SessionResponse'
                    description: Created
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                default:
                    description: ""
            summary: HandleCreateWebAuthnSession creates session from WebAuthn
    /v1/account/status:
        patch:
            description: UpdateStatus updates user's account status
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStatusRequest'
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update account status
                default:
                    description: ""
            summary: UpdateStatus updates user's account status
    /v1/account/verification:
        post:
            description: SendEmailVerification sends email verification
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to send verification email
                default:
                    description: ""
            summary: SendEmailVerification sends email verification
        put:
            description: VerifyEmail verifies user's email
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyEmailRequest'
            responses:
                "204":
                    description: No Content
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to verify email
                default:
                    description: ""
            summary: VerifyEmail verifies user's email
    /v1/console/apikeys:
        get:
            description: ListAPIKeys lists all API keys for a project
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/apikey.ListAPIKeyResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not retrieve API keys.
                default:
                    description: ""
            summary: ListAPIKeys lists all API keys for a project
        post:
            description: CreateAPIKey creates a new API key
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAPIKeyRequest'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAPIKeyResponse'
                    description: Created
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not create API key.
                default:
                    description: ""
            summary: CreateAPIKey creates a new API key
    /v1/console/apikeys/{apiKeyId}:
        delete:
            description: RevokeAPIKey revokes an API key
            parameters:
                - in: path
                  name: apiKeyId
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid API key ID format.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not revoke API key.
                default:
                    description: ""
            summary: RevokeAPIKey revokes an API key
    /v1/console/oauth:
        get:
            description: HandleListProjectOAuthProviders lists OAuth providers
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]*github.com/zachacious/justauth/internal/services/oauth.ProjectOAuthProviderResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleListProjectOAuthProviders lists OAuth providers
    /v1/console/oauth/{provider}:
        delete:
            description: HandleDeleteProjectOAuthProvider deletes OAuth provider
            parameters:
                - in: path
                  name: provider
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleDeleteProjectOAuthProvider deletes OAuth provider
        get:
            description: HandleGetProjectOAuthProvider retrieves OAuth provider configuration
            parameters:
                - in: path
                  name: provider
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Config'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleGetProjectOAuthProvider retrieves OAuth provider configuration
        post:
            description: HandleUpsertProjectOAuthProvider creates or updates OAuth provider
            parameters:
                - in: path
                  name: provider
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpsertProjectOAuthProviderRequest'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectOAuthProviderResponse'
                    description: Created
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleUpsertProjectOAuthProvider creates or updates OAuth provider
    /v1/console/platform:
        get:
            description: HandleListPlatforms lists all platforms for a project
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/platform.PlatformResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleListPlatforms lists all platforms for a project
        post:
            description: HandleCreatePlatform creates a new platform
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlatformResponse'
                    description: Created
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleCreatePlatform creates a new platform
    /v1/console/platform/{platformID}:
        delete:
            description: HandleDeletePlatform deletes a platform configuration
            parameters:
                - in: path
                  name: platformID
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleDeletePlatform deletes a platform configuration
        get:
            description: HandleGetPlatform retrieves a specific platform
            parameters:
                - in: path
                  name: platformID
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlatformResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleGetPlatform retrieves a specific platform
        patch:
            description: HandleUpdatePlatform updates a platform configuration
            parameters:
                - in: path
                  name: platformID
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdatePlatformRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PlatformResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleUpdatePlatform updates a platform configuration
    /v1/console/projects:
        get:
            description: ListAll lists all projects for the authenticated user
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/struct{Projects []github.com/zachacious/justauth/internal/database/sqlcgen.Project "json:\"projects\""}'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to list projects
                default:
                    description: ""
            summary: ListAll lists all projects for the authenticated user
        post:
            description: Create creates a new project
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateProjectParams'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectResponse'
                    description: Created
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: ID and Name are required
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: You are not authorized to create projects
                "409":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Project already exists
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to create project
                default:
                    description: ""
            summary: Create creates a new project
    /v1/console/projects/{id}:
        delete:
            description: Delete deletes a project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Project ID is required
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to delete project
                default:
                    description: ""
            summary: Delete deletes a project
        get:
            description: Get retrieves a specific project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Project ID is required
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve project
                default:
                    description: ""
            summary: Get retrieves a specific project
    /v1/console/projects/{id}/analytics:
        get:
            description: HandleGetDashboardMetrics retrieves analytics for a project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DashboardMetricsResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not retrieve project analytics.
                default:
                    description: ""
            summary: HandleGetDashboardMetrics retrieves analytics for a project
    /v1/console/projects/{id}/audit-logs:
        get:
            description: HandleListProjectAuditLogs lists audit logs for a project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve audit logs.
                default:
                    description: ""
            summary: HandleListProjectAuditLogs lists audit logs for a project
    /v1/console/projects/{id}/id:
        patch:
            description: UpdateID updates a project's ID
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateProjectIDRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Project ID is required
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: You are not authorized to update projects
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update project ID
                default:
                    description: ""
            summary: UpdateID updates a project's ID
    /v1/console/projects/{id}/integrations:
        get:
            description: HandleListIntegrations lists project integrations
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/database/sqlcgen.ProjectIntegration'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleListIntegrations lists project integrations
        post:
            description: HandleCreateIntegration creates a new integration
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateIntegrationParams'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectIntegration'
                    description: Created
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleCreateIntegration creates a new integration
    /v1/console/projects/{id}/integrations/{integrationID}:
        delete:
            description: HandleDeleteIntegration deletes an integration
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: integrationID
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleDeleteIntegration deletes an integration
        get:
            description: HandleGetIntegration retrieves a single integration
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: integrationID
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IntegrationResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleGetIntegration retrieves a single integration
        put:
            description: HandleUpdateIntegration updates an existing integration
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: integrationID
                  required: true
                  schema:
                    format: uuid
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateIntegrationRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectIntegration'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Forbidden
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Not Found
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Internal Server Error
                default:
                    description: ""
            summary: HandleUpdateIntegration updates an existing integration
    /v1/console/projects/{id}/invitations:
        get:
            description: HandleListPendingInvitations lists pending invitations for a project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/project.InvitationResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve invitations.
                default:
                    description: ""
            summary: HandleListPendingInvitations lists pending invitations for a project
        post:
            description: HandleInviteMember invites a new member to the project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMemberRequest'
            responses:
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: User with this email does not exist.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Error finding user.
                default:
                    description: ""
            summary: HandleInviteMember invites a new member to the project
    /v1/console/projects/{id}/invitations/{invitationID}:
        delete:
            description: HandleRevokeInvitation revokes a pending invitation
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: invitationID
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                default:
                    description: ""
            summary: HandleRevokeInvitation revokes a pending invitation
    /v1/console/projects/{id}/jobs/{jobID}:
        get:
            description: HandleGetJobStatus retrieves job status
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: jobID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Job'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid job ID format.
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Access denied.
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Job not found.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not retrieve job status.
                default:
                    description: ""
            summary: HandleGetJobStatus retrieves job status
    /v1/console/projects/{id}/jobs/{jobID}/download:
        get:
            description: HandleDownloadExportJob downloads completed export
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: jobID
                  required: true
                  schema:
                    type: string
            responses:
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Job is not complete.
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Access denied.
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Job not found.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not retrieve export file.
                default:
                    description: ""
            summary: HandleDownloadExportJob downloads completed export
    /v1/console/projects/{id}/jobs/export:
        post:
            description: HandleCreateExportJob creates a new export job
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateJobResponse'
                    description: Accepted
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not start export job.
                default:
                    description: ""
            summary: HandleCreateExportJob creates a new export job
    /v1/console/projects/{id}/jobs/import:
        post:
            description: HandleCreateImportJob creates a new import job
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateJobResponse'
                    description: Accepted
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: No file field found in upload
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not start import job
                default:
                    description: ""
            summary: HandleCreateImportJob creates a new import job
    /v1/console/projects/{id}/members:
        get:
            description: HandleListMembers lists all project members
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/project.MemberResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to list project members.
                default:
                    description: ""
            summary: HandleListMembers lists all project members
        post:
            description: HandleInviteMember invites a new member to the project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMemberRequest'
            responses:
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: User with this email does not exist.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Error finding user.
                default:
                    description: ""
            summary: HandleInviteMember invites a new member to the project
    /v1/console/projects/{id}/members/{userID}:
        delete:
            description: HandleRemoveMember removes a member from the project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to remove member.
                default:
                    description: ""
            summary: HandleRemoveMember removes a member from the project
        put:
            description: HandleUpdateMemberRole updates a member's role
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMemberRoleRequest'
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update member role.
                default:
                    description: ""
            summary: HandleUpdateMemberRole updates a member's role
    /v1/console/projects/{id}/name:
        patch:
            description: UpdateName updates a project's name
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateProjectNameRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Project ID is required
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: You are not authorized to update projects
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update project name
                default:
                    description: ""
            summary: UpdateName updates a project's name
    /v1/console/projects/{id}/ratelimits:
        delete:
            description: ResetRateLimitSettings resets project rate limit settings
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to reset rate limit settings.
                default:
                    description: ""
            summary: ResetRateLimitSettings resets project rate limit settings
        put:
            description: UpdateRateLimitSettings updates project rate limit settings
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRateLimitRequest'
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update rate limit settings.
                default:
                    description: ""
            summary: UpdateRateLimitSettings updates project rate limit settings
    /v1/console/projects/{id}/roles:
        get:
            description: HandleListRoles lists all roles for a project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/rbac.RoleWithPermissions'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to list roles.
                default:
                    description: ""
            summary: HandleListRoles lists all roles for a project
        post:
            description: HandleCreateRole creates a new role
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRoleRequest'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleWithPermissions'
                    description: Created
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to create role.
                default:
                    description: ""
            summary: HandleCreateRole creates a new role
    /v1/console/projects/{id}/roles/{roleID}:
        delete:
            description: HandleDeleteRole deletes a role
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: roleID
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid role ID format.
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Access denied.
                "409":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Cannot delete role. It is still assigned to one or more project members.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to delete role.
                default:
                    description: ""
            summary: HandleDeleteRole deletes a role
        get:
            description: HandleGetRole retrieves a specific role
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: roleID
                  required: true
                  schema:
                    format: uuid
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RoleWithPermissions'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid role ID format.
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Access denied. This role does not belong to the specified project.
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Role not found.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve role.
                default:
                    description: ""
            summary: HandleGetRole retrieves a specific role
        put:
            description: HandleUpdateRole updates a role's basic information
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: roleID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRoleRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Role'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid role ID format.
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Access denied.
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Role not found.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update role.
                default:
                    description: ""
            summary: HandleUpdateRole updates a role's basic information
    /v1/console/projects/{id}/roles/{roleID}/permissions:
        put:
            description: HandleUpdateRolePermissions updates a role's permissions
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: roleID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRolePermissionsRequest'
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid role ID format.
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Access denied.
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Role not found.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update role permissions.
                default:
                    description: ""
            summary: HandleUpdateRolePermissions updates a role's permissions
    /v1/console/projects/{id}/sso/domains:
        get:
            description: HandleGetSSODomains lists all whitelisted domains for a project
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/sso.SSODomainResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to get SSO domains.
                default:
                    description: ""
            summary: HandleGetSSODomains lists all whitelisted domains for a project
        post:
            description: HandleAddProjectSSODomain adds domain to SSO whitelist
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddSSODomainRequest'
            responses:
                "409":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Domain already exists in SSO whitelist.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to add SSO domain.
                default:
                    description: ""
            summary: HandleAddProjectSSODomain adds domain to SSO whitelist
    /v1/console/projects/{id}/sso/domains/{domain}:
        delete:
            description: HandleRemoveProjectSSODomain removes domain from SSO whitelist
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - in: path
                  name: domain
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to remove SSO domain.
                default:
                    description: ""
            summary: HandleRemoveProjectSSODomain removes domain from SSO whitelist
    /v1/console/projects/{id}/sso/settings:
        get:
            description: HandleGetProjectSSOSettings retrieves SSO configuration for project management
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SSOSettingsResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to get SSO domains.
                default:
                    description: ""
            summary: HandleGetProjectSSOSettings retrieves SSO configuration for project management
        put:
            description: HandleUpdateProjectSSOSettings updates SSO configuration
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SSOSettings'
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update SSO settings.
                default:
                    description: ""
            summary: HandleUpdateProjectSSOSettings updates SSO configuration
    /v1/console/system/backups/config:
        get:
            description: HandleGetBackupConfig retrieves backup configuration
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackupConfigResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve backup configuration.
                default:
                    description: ""
            summary: HandleGetBackupConfig retrieves backup configuration
        put:
            description: HandleUpdateBackupConfig updates backup configuration
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBackupConfigRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BackupConfigResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to update backup configuration.
                default:
                    description: ""
            summary: HandleUpdateBackupConfig updates backup configuration
    /v1/console/system/backups/files:
        get:
            description: HandleListBackups lists all backup files
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/backup.BackupFile'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not list backups.
                default:
                    description: ""
            summary: HandleListBackups lists all backup files
        post:
            description: HandleTriggerBackup starts a manual backup
            responses:
                "202":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/map[string]string'
                    description: Accepted
                default:
                    description: ""
            summary: HandleTriggerBackup starts a manual backup
    /v1/console/system/backups/files/{filename}:
        delete:
            description: HandleDeleteBackup deletes a backup file
            parameters:
                - in: path
                  name: filename
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Filename is required.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not delete backup file.
                default:
                    description: ""
            summary: HandleDeleteBackup deletes a backup file
        get:
            description: HandleDownloadBackup downloads a backup file
            parameters:
                - in: path
                  name: filename
                  required: true
                  schema:
                    type: string
            responses:
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Filename is required.
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Backup file not found.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not retrieve backup file.
                default:
                    description: ""
            summary: HandleDownloadBackup downloads a backup file
    /v1/invitations/accept:
        post:
            description: HandleAcceptInvitation accepts a project invitation
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AcceptInvitationRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/map[string]bool'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: You must be logged in to accept an invitation.
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Authenticated user not found.
                default:
                    description: ""
            summary: HandleAcceptInvitation accepts a project invitation
    /v1/sso/analytics:
        get:
            description: HandleGetSSOAnalytics retrieves SSO usage analytics
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/map[string]interface{}'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to get SSO analytics.
                default:
                    description: ""
            summary: HandleGetSSOAnalytics retrieves SSO usage analytics
    /v1/sso/authenticate:
        post:
            description: HandleAuthenticateSSO validates SSO passport and returns session tokens
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SSOExchangeRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SSOExchangeResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: SSO passport signature is invalid.
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Domain is not authorized for SSO.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to authenticate via SSO.
                default:
                    description: ""
            summary: HandleAuthenticateSSO validates SSO passport and returns session tokens
    /v1/sso/initiate:
        post:
            description: HandleInitiateSSO generates SSO passport for authenticated user to use on other domains
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GeneratePassportRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GeneratePassportResponse'
                    description: OK
                "401":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Authentication required.
                "403":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Origin domain is not authorized for SSO.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to generate SSO passport.
                default:
                    description: ""
            summary: HandleInitiateSSO generates SSO passport for authenticated user to use on other domains
    /v1/users:
        get:
            description: HandleListUsers lists all users with pagination
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/users.UserResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve users.
                default:
                    description: ""
            summary: HandleListUsers lists all users with pagination
        post:
            description: HandleCreateUser creates a new user
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequest'
            responses:
                "201":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                    description: Created
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not create user.
                default:
                    description: ""
            summary: HandleCreateUser creates a new user
    /v1/users/{userID}:
        delete:
            description: HandleDeleteUser deletes a user
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not delete user.
                default:
                    description: ""
            summary: HandleDeleteUser deletes a user
        get:
            description: HandleGetUser retrieves a specific user by ID
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                    description: OK
                "404":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: User not found.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not retrieve user.
                default:
                    description: ""
            summary: HandleGetUser retrieves a specific user by ID
        put:
            description: HandleUpdateUser updates user details
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not update user.
                default:
                    description: ""
            summary: HandleUpdateUser updates user details
    /v1/users/{userID}/audit-logs:
        get:
            description: HandleListUserAuditLogs lists audit logs for a specific user
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            responses:
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid user ID format.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve user activity logs.
                default:
                    description: ""
            summary: HandleListUserAuditLogs lists audit logs for a specific user
    /v1/users/{userID}/email:
        put:
            description: HandleUpdateUserEmail updates user email
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserEmailRequest'
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not update user email.
                default:
                    description: ""
            summary: HandleUpdateUserEmail updates user email
    /v1/users/{userID}/mfa:
        get:
            description: HandleListMFAFactors lists user MFA factors
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/users.UserMFAResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve MFA factors.
                default:
                    description: ""
            summary: HandleListMFAFactors lists user MFA factors
    /v1/users/{userID}/mfa/{factorID}:
        delete:
            description: HandleDeleteMFAFactor removes user MFA factor
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
                - in: path
                  name: factorID
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid MFA factor ID format.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not delete MFA factor.
                default:
                    description: ""
            summary: HandleDeleteMFAFactor removes user MFA factor
    /v1/users/{userID}/mfa/totp/recovery-codes:
        post:
            description: HandleRegenerateRecoveryCodes regenerates TOTP backup codes
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegenerateRecoveryCodesResponse'
                    description: OK
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Bad Request
                default:
                    description: ""
            summary: HandleRegenerateRecoveryCodes regenerates TOTP backup codes
    /v1/users/{userID}/password:
        put:
            description: HandleUpdateUserPassword updates user password
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AdminUpdatePasswordRequest'
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not update user password.
                default:
                    description: ""
            summary: HandleUpdateUserPassword updates user password
    /v1/users/{userID}/phone:
        put:
            description: HandleUpdateUserPhone updates user phone number
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserPhoneRequest'
            responses:
                "204":
                    description: No Content
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not update user phone number.
                default:
                    description: ""
            summary: HandleUpdateUserPhone updates user phone number
    /v1/users/{userID}/sessions:
        get:
            description: HandleListUserSessions lists all user sessions
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/[]github.com/zachacious/justauth/internal/services/users.UserSessionResponse'
                    description: OK
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Failed to retrieve user sessions.
                default:
                    description: ""
            summary: HandleListUserSessions lists all user sessions
    /v1/users/{userID}/sessions/{sessionID}:
        delete:
            description: HandleDeleteUserSession deletes a user session
            parameters:
                - in: path
                  name: userID
                  required: true
                  schema:
                    type: string
                - in: path
                  name: sessionID
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: No Content
                "400":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Invalid session ID format.
                "500":
                    content:
                        application/json:
                            schema:
                                description: Type untyped nil
                                type: string
                    description: Could not delete user session.
                default:
                    description: ""
            summary: HandleDeleteUserSession deletes a user session
